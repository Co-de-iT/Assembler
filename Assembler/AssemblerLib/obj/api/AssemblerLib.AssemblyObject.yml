### YamlMime:ManagedReference
items:
- uid: AssemblerLib.AssemblyObject
  commentId: T:AssemblerLib.AssemblyObject
  id: AssemblyObject
  parent: AssemblerLib
  children:
  - AssemblerLib.AssemblyObject.#ctor
  - AssemblerLib.AssemblyObject.#ctor(Rhino.Geometry.Mesh,AssemblerLib.Handle[],Rhino.Geometry.Plane,Rhino.Geometry.Vector3d,System.String,System.Int32,System.Double,System.Boolean,System.Collections.Generic.List{AssemblerLib.AssemblyObject})
  - AssemblerLib.AssemblyObject.#ctor(Rhino.Geometry.Mesh,AssemblerLib.Handle[],Rhino.Geometry.Plane,Rhino.Geometry.Vector3d,System.String,System.Int32,System.Double,System.Int32,System.Collections.Generic.List{AssemblerLib.Support},System.Int32,System.Boolean)
  - AssemblerLib.AssemblyObject.#ctor(Rhino.Geometry.Mesh,Rhino.Geometry.Mesh,AssemblerLib.Handle[],Rhino.Geometry.Plane,Rhino.Geometry.Vector3d,System.Int32,System.Collections.Generic.List{System.Int32[]},System.Double,System.String,System.Int32,System.Double,System.Int32,System.Collections.Generic.List{AssemblerLib.Support},System.Int32,System.Boolean,System.Boolean,System.Collections.Generic.List{AssemblerLib.AssemblyObject},System.Collections.Generic.List{System.Int32[]})
  - AssemblerLib.AssemblyObject.#ctor(Rhino.Geometry.Mesh,Rhino.Geometry.Plane,Rhino.Geometry.Vector3d,System.String,System.Int32,System.Double,System.Boolean,System.Collections.Generic.List{AssemblerLib.AssemblyObject})
  - AssemblerLib.AssemblyObject.AInd
  - AssemblerLib.AssemblyObject.children
  - AssemblerLib.AssemblyObject.collisionMesh
  - AssemblerLib.AssemblyObject.collisionRadius
  - AssemblerLib.AssemblyObject.direction
  - AssemblerLib.AssemblyObject.handles
  - AssemblerLib.AssemblyObject.iWeight
  - AssemblerLib.AssemblyObject.minSupports
  - AssemblerLib.AssemblyObject.name
  - AssemblerLib.AssemblyObject.occludedNeighbours
  - AssemblerLib.AssemblyObject.offsetMesh
  - AssemblerLib.AssemblyObject.referencePlane
  - AssemblerLib.AssemblyObject.supported
  - AssemblerLib.AssemblyObject.supports
  - AssemblerLib.AssemblyObject.Transform(Rhino.Geometry.Transform)
  - AssemblerLib.AssemblyObject.type
  - AssemblerLib.AssemblyObject.UpdateHandle(System.Int32,System.Int32,System.Int32,System.Int32,System.Double)
  - AssemblerLib.AssemblyObject.weight
  - AssemblerLib.AssemblyObject.worldZLock
  langs:
  - csharp
  - vb
  name: AssemblyObject
  nameWithType: AssemblyObject
  fullName: AssemblerLib.AssemblyObject
  type: Class
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/AssemblyObject.cs
    id: AssemblyObject
    path: AssemblyObject.cs
    startLine: 11
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  summary: "\nAssemblage Object with extended connectivity and collision-check properties\n"
  example: []
  syntax:
    content: public class AssemblyObject
    content.vb: Public Class AssemblyObject
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AssemblerLib.AssemblyObject.children
  commentId: F:AssemblerLib.AssemblyObject.children
  id: children
  parent: AssemblerLib.AssemblyObject
  langs:
  - csharp
  - vb
  name: children
  nameWithType: AssemblyObject.children
  fullName: AssemblerLib.AssemblyObject.children
  type: Field
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/AssemblyObject.cs
    id: children
    path: AssemblyObject.cs
    startLine: 17
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  summary: "\nList of optional children objects (for composite object)\n"
  example: []
  syntax:
    content: public List<AssemblyObject> children
    return:
      type: System.Collections.Generic.List{AssemblerLib.AssemblyObject}
    content.vb: Public children As List(Of AssemblyObject)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AssemblerLib.AssemblyObject.collisionMesh
  commentId: F:AssemblerLib.AssemblyObject.collisionMesh
  id: collisionMesh
  parent: AssemblerLib.AssemblyObject
  langs:
  - csharp
  - vb
  name: collisionMesh
  nameWithType: AssemblyObject.collisionMesh
  fullName: AssemblerLib.AssemblyObject.collisionMesh
  type: Field
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/AssemblyObject.cs
    id: collisionMesh
    path: AssemblyObject.cs
    startLine: 21
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  summary: "\nA Mesh for collision detections\n"
  example: []
  syntax:
    content: public Mesh collisionMesh
    return:
      type: Rhino.Geometry.Mesh
    content.vb: Public collisionMesh As Mesh
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AssemblerLib.AssemblyObject.offsetMesh
  commentId: F:AssemblerLib.AssemblyObject.offsetMesh
  id: offsetMesh
  parent: AssemblerLib.AssemblyObject
  langs:
  - csharp
  - vb
  name: offsetMesh
  nameWithType: AssemblyObject.offsetMesh
  fullName: AssemblerLib.AssemblyObject.offsetMesh
  type: Field
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/AssemblyObject.cs
    id: offsetMesh
    path: AssemblyObject.cs
    startLine: 25
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  summary: "\nA Mesh for avoiding false positives in collision detection (overlaps)\n"
  example: []
  syntax:
    content: public Mesh offsetMesh
    return:
      type: Rhino.Geometry.Mesh
    content.vb: Public offsetMesh As Mesh
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AssemblerLib.AssemblyObject.referencePlane
  commentId: F:AssemblerLib.AssemblyObject.referencePlane
  id: referencePlane
  parent: AssemblerLib.AssemblyObject
  langs:
  - csharp
  - vb
  name: referencePlane
  nameWithType: AssemblyObject.referencePlane
  fullName: AssemblerLib.AssemblyObject.referencePlane
  type: Field
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/AssemblyObject.cs
    id: referencePlane
    path: AssemblyObject.cs
    startLine: 29
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  summary: "\nReference Plane for the AssemblyObject\n"
  example: []
  syntax:
    content: public Plane referencePlane
    return:
      type: Rhino.Geometry.Plane
    content.vb: Public referencePlane As Plane
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AssemblerLib.AssemblyObject.handles
  commentId: F:AssemblerLib.AssemblyObject.handles
  id: handles
  parent: AssemblerLib.AssemblyObject
  langs:
  - csharp
  - vb
  name: handles
  nameWithType: AssemblyObject.handles
  fullName: AssemblerLib.AssemblyObject.handles
  type: Field
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/AssemblyObject.cs
    id: handles
    path: AssemblyObject.cs
    startLine: 33
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  summary: "\nHandles for connectivity and assemblage operations\n"
  example: []
  syntax:
    content: public Handle[] handles
    return:
      type: AssemblerLib.Handle[]
    content.vb: Public handles As Handle()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AssemblerLib.AssemblyObject.direction
  commentId: F:AssemblerLib.AssemblyObject.direction
  id: direction
  parent: AssemblerLib.AssemblyObject
  langs:
  - csharp
  - vb
  name: direction
  nameWithType: AssemblyObject.direction
  fullName: AssemblerLib.AssemblyObject.direction
  type: Field
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/AssemblyObject.cs
    id: direction
    path: AssemblyObject.cs
    startLine: 37
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  summary: "\nDirection Vector - for vector field generation/interaction\n"
  example: []
  syntax:
    content: public Vector3d direction
    return:
      type: Rhino.Geometry.Vector3d
    content.vb: Public direction As Vector3d
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AssemblerLib.AssemblyObject.supports
  commentId: F:AssemblerLib.AssemblyObject.supports
  id: supports
  parent: AssemblerLib.AssemblyObject
  langs:
  - csharp
  - vb
  name: supports
  nameWithType: AssemblyObject.supports
  fullName: AssemblerLib.AssemblyObject.supports
  type: Field
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/AssemblyObject.cs
    id: supports
    path: AssemblyObject.cs
    startLine: 41
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  summary: "\nSupports\n"
  example: []
  syntax:
    content: public List<Support> supports
    return:
      type: System.Collections.Generic.List{AssemblerLib.Support}
    content.vb: Public supports As List(Of Support)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AssemblerLib.AssemblyObject.minSupports
  commentId: F:AssemblerLib.AssemblyObject.minSupports
  id: minSupports
  parent: AssemblerLib.AssemblyObject
  langs:
  - csharp
  - vb
  name: minSupports
  nameWithType: AssemblyObject.minSupports
  fullName: AssemblerLib.AssemblyObject.minSupports
  type: Field
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/AssemblyObject.cs
    id: minSupports
    path: AssemblyObject.cs
    startLine: 45
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  summary: "\nn. of minimum connected Supports to consider the object supported\n"
  example: []
  syntax:
    content: public int minSupports
    return:
      type: System.Int32
    content.vb: Public minSupports As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AssemblerLib.AssemblyObject.supported
  commentId: F:AssemblerLib.AssemblyObject.supported
  id: supported
  parent: AssemblerLib.AssemblyObject
  langs:
  - csharp
  - vb
  name: supported
  nameWithType: AssemblyObject.supported
  fullName: AssemblerLib.AssemblyObject.supported
  type: Field
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/AssemblyObject.cs
    id: supported
    path: AssemblyObject.cs
    startLine: 49
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  summary: "\nTrue if minimum amount of required supports are connected\n"
  example: []
  syntax:
    content: public bool supported
    return:
      type: System.Boolean
    content.vb: Public supported As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AssemblerLib.AssemblyObject.type
  commentId: F:AssemblerLib.AssemblyObject.type
  id: type
  parent: AssemblerLib.AssemblyObject
  langs:
  - csharp
  - vb
  name: type
  nameWithType: AssemblyObject.type
  fullName: AssemblerLib.AssemblyObject.type
  type: Field
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/AssemblyObject.cs
    id: type
    path: AssemblyObject.cs
    startLine: 53
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  summary: "\nAssemblyObject id - identifies a unique object type\n"
  example: []
  syntax:
    content: public int type
    return:
      type: System.Int32
    content.vb: Public type As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AssemblerLib.AssemblyObject.name
  commentId: F:AssemblerLib.AssemblyObject.name
  id: name
  parent: AssemblerLib.AssemblyObject
  langs:
  - csharp
  - vb
  name: name
  nameWithType: AssemblyObject.name
  fullName: AssemblerLib.AssemblyObject.name
  type: Field
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/AssemblyObject.cs
    id: name
    path: AssemblyObject.cs
    startLine: 57
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  summary: "\nAssemblyObject name\n"
  example: []
  syntax:
    content: public string name
    return:
      type: System.String
    content.vb: Public name As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AssemblerLib.AssemblyObject.AInd
  commentId: P:AssemblerLib.AssemblyObject.AInd
  id: AInd
  parent: AssemblerLib.AssemblyObject
  langs:
  - csharp
  - vb
  name: AInd
  nameWithType: AssemblyObject.AInd
  fullName: AssemblerLib.AssemblyObject.AInd
  type: Property
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/AssemblyObject.cs
    id: AInd
    path: AssemblyObject.cs
    startLine: 61
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  summary: "\nAssemblyObject unique index in an assemblage\n"
  example: []
  syntax:
    content: public int AInd { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property AInd As Integer
  overload: AssemblerLib.AssemblyObject.AInd*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AssemblerLib.AssemblyObject.occludedNeighbours
  commentId: F:AssemblerLib.AssemblyObject.occludedNeighbours
  id: occludedNeighbours
  parent: AssemblerLib.AssemblyObject
  langs:
  - csharp
  - vb
  name: occludedNeighbours
  nameWithType: AssemblyObject.occludedNeighbours
  fullName: AssemblerLib.AssemblyObject.occludedNeighbours
  type: Field
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/AssemblyObject.cs
    id: occludedNeighbours
    path: AssemblyObject.cs
    startLine: 67
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  summary: "\nList of tuples containing object index and handle index occluded by this object\n"
  example: []
  syntax:
    content: public List<int[]> occludedNeighbours
    return:
      type: System.Collections.Generic.List{System.Int32[]}
    content.vb: Public occludedNeighbours As List(Of Integer())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AssemblerLib.AssemblyObject.collisionRadius
  commentId: F:AssemblerLib.AssemblyObject.collisionRadius
  id: collisionRadius
  parent: AssemblerLib.AssemblyObject
  langs:
  - csharp
  - vb
  name: collisionRadius
  nameWithType: AssemblyObject.collisionRadius
  fullName: AssemblerLib.AssemblyObject.collisionRadius
  type: Field
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/AssemblyObject.cs
    id: collisionRadius
    path: AssemblyObject.cs
    startLine: 71
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  summary: "\nCollision radius for collision checks with neighbour AssemblyObjects\n"
  example: []
  syntax:
    content: public double collisionRadius
    return:
      type: System.Double
    content.vb: Public collisionRadius As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AssemblerLib.AssemblyObject.weight
  commentId: F:AssemblerLib.AssemblyObject.weight
  id: weight
  parent: AssemblerLib.AssemblyObject
  langs:
  - csharp
  - vb
  name: weight
  nameWithType: AssemblyObject.weight
  fullName: AssemblerLib.AssemblyObject.weight
  type: Field
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/AssemblyObject.cs
    id: weight
    path: AssemblyObject.cs
    startLine: 75
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  summary: "\nScalar value for density evaluation or scalar field generation/interaction\n"
  example: []
  syntax:
    content: public double weight
    return:
      type: System.Double
    content.vb: Public weight As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AssemblerLib.AssemblyObject.iWeight
  commentId: F:AssemblerLib.AssemblyObject.iWeight
  id: iWeight
  parent: AssemblerLib.AssemblyObject
  langs:
  - csharp
  - vb
  name: iWeight
  nameWithType: AssemblyObject.iWeight
  fullName: AssemblerLib.AssemblyObject.iWeight
  type: Field
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/AssemblyObject.cs
    id: iWeight
    path: AssemblyObject.cs
    startLine: 79
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  summary: "\nInteger Weight for Weighted Random choice (to be implemented) or other weight-based operations\n"
  example: []
  syntax:
    content: public int iWeight
    return:
      type: System.Int32
    content.vb: Public iWeight As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AssemblerLib.AssemblyObject.worldZLock
  commentId: F:AssemblerLib.AssemblyObject.worldZLock
  id: worldZLock
  parent: AssemblerLib.AssemblyObject
  langs:
  - csharp
  - vb
  name: worldZLock
  nameWithType: AssemblyObject.worldZLock
  fullName: AssemblerLib.AssemblyObject.worldZLock
  type: Field
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/AssemblyObject.cs
    id: worldZLock
    path: AssemblyObject.cs
    startLine: 83
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  summary: "\nTrue to force the object&apos;s reference plane Z axys parallel to the World&apos;s Z axis\n"
  example: []
  syntax:
    content: public bool worldZLock
    return:
      type: System.Boolean
    content.vb: Public worldZLock As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AssemblerLib.AssemblyObject.#ctor
  commentId: M:AssemblerLib.AssemblyObject.#ctor
  id: '#ctor'
  parent: AssemblerLib.AssemblyObject
  langs:
  - csharp
  - vb
  name: AssemblyObject()
  nameWithType: AssemblyObject.AssemblyObject()
  fullName: AssemblerLib.AssemblyObject.AssemblyObject()
  type: Constructor
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/AssemblyObject.cs
    id: .ctor
    path: AssemblyObject.cs
    startLine: 96
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  summary: "\nempty constructor\n"
  example: []
  syntax:
    content: public AssemblyObject()
    content.vb: Public Sub New
  overload: AssemblerLib.AssemblyObject.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AssemblerLib.AssemblyObject.#ctor(Rhino.Geometry.Mesh,Rhino.Geometry.Mesh,AssemblerLib.Handle[],Rhino.Geometry.Plane,Rhino.Geometry.Vector3d,System.Int32,System.Collections.Generic.List{System.Int32[]},System.Double,System.String,System.Int32,System.Double,System.Int32,System.Collections.Generic.List{AssemblerLib.Support},System.Int32,System.Boolean,System.Boolean,System.Collections.Generic.List{AssemblerLib.AssemblyObject},System.Collections.Generic.List{System.Int32[]})
  commentId: M:AssemblerLib.AssemblyObject.#ctor(Rhino.Geometry.Mesh,Rhino.Geometry.Mesh,AssemblerLib.Handle[],Rhino.Geometry.Plane,Rhino.Geometry.Vector3d,System.Int32,System.Collections.Generic.List{System.Int32[]},System.Double,System.String,System.Int32,System.Double,System.Int32,System.Collections.Generic.List{AssemblerLib.Support},System.Int32,System.Boolean,System.Boolean,System.Collections.Generic.List{AssemblerLib.AssemblyObject},System.Collections.Generic.List{System.Int32[]})
  id: '#ctor(Rhino.Geometry.Mesh,Rhino.Geometry.Mesh,AssemblerLib.Handle[],Rhino.Geometry.Plane,Rhino.Geometry.Vector3d,System.Int32,System.Collections.Generic.List{System.Int32[]},System.Double,System.String,System.Int32,System.Double,System.Int32,System.Collections.Generic.List{AssemblerLib.Support},System.Int32,System.Boolean,System.Boolean,System.Collections.Generic.List{AssemblerLib.AssemblyObject},System.Collections.Generic.List{System.Int32[]})'
  parent: AssemblerLib.AssemblyObject
  langs:
  - csharp
  - vb
  name: AssemblyObject(Mesh, Mesh, Handle[], Plane, Vector3d, Int32, List<Int32[]>, Double, String, Int32, Double, Int32, List<Support>, Int32, Boolean, Boolean, List<AssemblyObject>, List<Int32[]>)
  nameWithType: AssemblyObject.AssemblyObject(Mesh, Mesh, Handle[], Plane, Vector3d, Int32, List<Int32[]>, Double, String, Int32, Double, Int32, List<Support>, Int32, Boolean, Boolean, List<AssemblyObject>, List<Int32[]>)
  fullName: AssemblerLib.AssemblyObject.AssemblyObject(Rhino.Geometry.Mesh, Rhino.Geometry.Mesh, AssemblerLib.Handle[], Rhino.Geometry.Plane, Rhino.Geometry.Vector3d, System.Int32, System.Collections.Generic.List<System.Int32[]>, System.Double, System.String, System.Int32, System.Double, System.Int32, System.Collections.Generic.List<AssemblerLib.Support>, System.Int32, System.Boolean, System.Boolean, System.Collections.Generic.List<AssemblerLib.AssemblyObject>, System.Collections.Generic.List<System.Int32[]>)
  type: Constructor
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/AssemblyObject.cs
    id: .ctor
    path: AssemblyObject.cs
    startLine: 130
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  summary: "\nConstructor used for JSON deserialization\nThis constructor DOES NOT execute a deep copy of data\nIf you need to duplicate an AssemblyObject use the Utilities.Clone method\nor Utilities.CloneWithConnectivity method\n"
  example: []
  syntax:
    content: >-
      [JsonConstructor]

      public AssemblyObject(Mesh collisionMesh, Mesh offsetMesh, Handle[] handles, Plane referencePlane, Vector3d direction, int aInd, List<int[]> occludedNeighbours, double collisionRadius, string name, int type, double weight, int iWeight, List<Support> supports, int minSupports, bool supported, bool worldZLock, List<AssemblyObject> children, List<int[]> handleMap)
    parameters:
    - id: collisionMesh
      type: Rhino.Geometry.Mesh
      description: ''
    - id: offsetMesh
      type: Rhino.Geometry.Mesh
      description: ''
    - id: handles
      type: AssemblerLib.Handle[]
      description: ''
    - id: referencePlane
      type: Rhino.Geometry.Plane
      description: ''
    - id: direction
      type: Rhino.Geometry.Vector3d
      description: ''
    - id: aInd
      type: System.Int32
      description: ''
    - id: occludedNeighbours
      type: System.Collections.Generic.List{System.Int32[]}
      description: ''
    - id: collisionRadius
      type: System.Double
      description: ''
    - id: name
      type: System.String
      description: ''
    - id: type
      type: System.Int32
      description: ''
    - id: weight
      type: System.Double
      description: ''
    - id: iWeight
      type: System.Int32
      description: ''
    - id: supports
      type: System.Collections.Generic.List{AssemblerLib.Support}
      description: ''
    - id: minSupports
      type: System.Int32
      description: ''
    - id: supported
      type: System.Boolean
      description: ''
    - id: worldZLock
      type: System.Boolean
      description: ''
    - id: children
      type: System.Collections.Generic.List{AssemblerLib.AssemblyObject}
      description: ''
    - id: handleMap
      type: System.Collections.Generic.List{System.Int32[]}
      description: ''
    content.vb: >-
      <JsonConstructor>

      Public Sub New(collisionMesh As Mesh, offsetMesh As Mesh, handles As Handle(), referencePlane As Plane, direction As Vector3d, aInd As Integer, occludedNeighbours As List(Of Integer()), collisionRadius As Double, name As String, type As Integer, weight As Double, iWeight As Integer, supports As List(Of Support), minSupports As Integer, supported As Boolean, worldZLock As Boolean, children As List(Of AssemblyObject), handleMap As List(Of Integer()))
  overload: AssemblerLib.AssemblyObject.#ctor*
  attributes:
  - type: Newtonsoft.Json.JsonConstructorAttribute
    ctor: Newtonsoft.Json.JsonConstructorAttribute.#ctor
    arguments: []
  nameWithType.vb: AssemblyObject.AssemblyObject(Mesh, Mesh, Handle(), Plane, Vector3d, Int32, List(Of Int32()), Double, String, Int32, Double, Int32, List(Of Support), Int32, Boolean, Boolean, List(Of AssemblyObject), List(Of Int32()))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AssemblerLib.AssemblyObject.AssemblyObject(Rhino.Geometry.Mesh, Rhino.Geometry.Mesh, AssemblerLib.Handle(), Rhino.Geometry.Plane, Rhino.Geometry.Vector3d, System.Int32, System.Collections.Generic.List(Of System.Int32()), System.Double, System.String, System.Int32, System.Double, System.Int32, System.Collections.Generic.List(Of AssemblerLib.Support), System.Int32, System.Boolean, System.Boolean, System.Collections.Generic.List(Of AssemblerLib.AssemblyObject), System.Collections.Generic.List(Of System.Int32()))
  name.vb: AssemblyObject(Mesh, Mesh, Handle(), Plane, Vector3d, Int32, List(Of Int32()), Double, String, Int32, Double, Int32, List(Of Support), Int32, Boolean, Boolean, List(Of AssemblyObject), List(Of Int32()))
- uid: AssemblerLib.AssemblyObject.#ctor(Rhino.Geometry.Mesh,AssemblerLib.Handle[],Rhino.Geometry.Plane,Rhino.Geometry.Vector3d,System.String,System.Int32,System.Double,System.Int32,System.Collections.Generic.List{AssemblerLib.Support},System.Int32,System.Boolean)
  commentId: M:AssemblerLib.AssemblyObject.#ctor(Rhino.Geometry.Mesh,AssemblerLib.Handle[],Rhino.Geometry.Plane,Rhino.Geometry.Vector3d,System.String,System.Int32,System.Double,System.Int32,System.Collections.Generic.List{AssemblerLib.Support},System.Int32,System.Boolean)
  id: '#ctor(Rhino.Geometry.Mesh,AssemblerLib.Handle[],Rhino.Geometry.Plane,Rhino.Geometry.Vector3d,System.String,System.Int32,System.Double,System.Int32,System.Collections.Generic.List{AssemblerLib.Support},System.Int32,System.Boolean)'
  parent: AssemblerLib.AssemblyObject
  langs:
  - csharp
  - vb
  name: AssemblyObject(Mesh, Handle[], Plane, Vector3d, String, Int32, Double, Int32, List<Support>, Int32, Boolean)
  nameWithType: AssemblyObject.AssemblyObject(Mesh, Handle[], Plane, Vector3d, String, Int32, Double, Int32, List<Support>, Int32, Boolean)
  fullName: AssemblerLib.AssemblyObject.AssemblyObject(Rhino.Geometry.Mesh, AssemblerLib.Handle[], Rhino.Geometry.Plane, Rhino.Geometry.Vector3d, System.String, System.Int32, System.Double, System.Int32, System.Collections.Generic.List<AssemblerLib.Support>, System.Int32, System.Boolean)
  type: Constructor
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/AssemblyObject.cs
    id: .ctor
    path: AssemblyObject.cs
    startLine: 169
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  summary: "\nBuilds an AssemblyObject from all required parameters\n"
  example: []
  syntax:
    content: public AssemblyObject(Mesh collisionMesh, Handle[] handles, Plane referencePlane, Vector3d direction, string name, int type, double weight, int iWeight, List<Support> supports, int minSupports, bool worldZLock)
    parameters:
    - id: collisionMesh
      type: Rhino.Geometry.Mesh
      description: Mesh for collision calculation
    - id: handles
      type: AssemblerLib.Handle[]
      description: handles for assemblage
    - id: referencePlane
      type: Rhino.Geometry.Plane
      description: reference Plane
    - id: direction
      type: Rhino.Geometry.Vector3d
      description: direction for Vector field interaction
    - id: name
      type: System.String
      description: object type name
    - id: type
      type: System.Int32
      description: object type id
    - id: weight
      type: System.Double
      description: scalar for density operations or field interactions
    - id: iWeight
      type: System.Int32
      description: integer Weight for Weighted Random choice
    - id: supports
      type: System.Collections.Generic.List{AssemblerLib.Support}
      description: list of supports
    - id: minSupports
      type: System.Int32
      description: minimum n. of supports required
    - id: worldZLock
      type: System.Boolean
      description: lock orientation of Z axis to World Z axis
    content.vb: Public Sub New(collisionMesh As Mesh, handles As Handle(), referencePlane As Plane, direction As Vector3d, name As String, type As Integer, weight As Double, iWeight As Integer, supports As List(Of Support), minSupports As Integer, worldZLock As Boolean)
  overload: AssemblerLib.AssemblyObject.#ctor*
  nameWithType.vb: AssemblyObject.AssemblyObject(Mesh, Handle(), Plane, Vector3d, String, Int32, Double, Int32, List(Of Support), Int32, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AssemblerLib.AssemblyObject.AssemblyObject(Rhino.Geometry.Mesh, AssemblerLib.Handle(), Rhino.Geometry.Plane, Rhino.Geometry.Vector3d, System.String, System.Int32, System.Double, System.Int32, System.Collections.Generic.List(Of AssemblerLib.Support), System.Int32, System.Boolean)
  name.vb: AssemblyObject(Mesh, Handle(), Plane, Vector3d, String, Int32, Double, Int32, List(Of Support), Int32, Boolean)
- uid: AssemblerLib.AssemblyObject.#ctor(Rhino.Geometry.Mesh,Rhino.Geometry.Plane,Rhino.Geometry.Vector3d,System.String,System.Int32,System.Double,System.Boolean,System.Collections.Generic.List{AssemblerLib.AssemblyObject})
  commentId: M:AssemblerLib.AssemblyObject.#ctor(Rhino.Geometry.Mesh,Rhino.Geometry.Plane,Rhino.Geometry.Vector3d,System.String,System.Int32,System.Double,System.Boolean,System.Collections.Generic.List{AssemblerLib.AssemblyObject})
  id: '#ctor(Rhino.Geometry.Mesh,Rhino.Geometry.Plane,Rhino.Geometry.Vector3d,System.String,System.Int32,System.Double,System.Boolean,System.Collections.Generic.List{AssemblerLib.AssemblyObject})'
  parent: AssemblerLib.AssemblyObject
  langs:
  - csharp
  - vb
  name: AssemblyObject(Mesh, Plane, Vector3d, String, Int32, Double, Boolean, List<AssemblyObject>)
  nameWithType: AssemblyObject.AssemblyObject(Mesh, Plane, Vector3d, String, Int32, Double, Boolean, List<AssemblyObject>)
  fullName: AssemblerLib.AssemblyObject.AssemblyObject(Rhino.Geometry.Mesh, Rhino.Geometry.Plane, Rhino.Geometry.Vector3d, System.String, System.Int32, System.Double, System.Boolean, System.Collections.Generic.List<AssemblerLib.AssemblyObject>)
  type: Constructor
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/AssemblyObject.cs
    id: .ctor
    path: AssemblyObject.cs
    startLine: 226
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  summary: "\nBuilds a composite AssemblyObject from a list of children and a custom collisionMesh\n"
  example: []
  syntax:
    content: public AssemblyObject(Mesh collisionMesh, Plane referencePlane, Vector3d direction, string name, int type, double weight, bool absoluteZLock, List<AssemblyObject> children)
    parameters:
    - id: collisionMesh
      type: Rhino.Geometry.Mesh
      description: ''
    - id: referencePlane
      type: Rhino.Geometry.Plane
      description: ''
    - id: direction
      type: Rhino.Geometry.Vector3d
      description: ''
    - id: name
      type: System.String
      description: ''
    - id: type
      type: System.Int32
      description: ''
    - id: weight
      type: System.Double
      description: ''
    - id: absoluteZLock
      type: System.Boolean
      description: ''
    - id: children
      type: System.Collections.Generic.List{AssemblerLib.AssemblyObject}
      description: ''
    content.vb: Public Sub New(collisionMesh As Mesh, referencePlane As Plane, direction As Vector3d, name As String, type As Integer, weight As Double, absoluteZLock As Boolean, children As List(Of AssemblyObject))
  overload: AssemblerLib.AssemblyObject.#ctor*
  nameWithType.vb: AssemblyObject.AssemblyObject(Mesh, Plane, Vector3d, String, Int32, Double, Boolean, List(Of AssemblyObject))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AssemblerLib.AssemblyObject.AssemblyObject(Rhino.Geometry.Mesh, Rhino.Geometry.Plane, Rhino.Geometry.Vector3d, System.String, System.Int32, System.Double, System.Boolean, System.Collections.Generic.List(Of AssemblerLib.AssemblyObject))
  name.vb: AssemblyObject(Mesh, Plane, Vector3d, String, Int32, Double, Boolean, List(Of AssemblyObject))
- uid: AssemblerLib.AssemblyObject.#ctor(Rhino.Geometry.Mesh,AssemblerLib.Handle[],Rhino.Geometry.Plane,Rhino.Geometry.Vector3d,System.String,System.Int32,System.Double,System.Boolean,System.Collections.Generic.List{AssemblerLib.AssemblyObject})
  commentId: M:AssemblerLib.AssemblyObject.#ctor(Rhino.Geometry.Mesh,AssemblerLib.Handle[],Rhino.Geometry.Plane,Rhino.Geometry.Vector3d,System.String,System.Int32,System.Double,System.Boolean,System.Collections.Generic.List{AssemblerLib.AssemblyObject})
  id: '#ctor(Rhino.Geometry.Mesh,AssemblerLib.Handle[],Rhino.Geometry.Plane,Rhino.Geometry.Vector3d,System.String,System.Int32,System.Double,System.Boolean,System.Collections.Generic.List{AssemblerLib.AssemblyObject})'
  parent: AssemblerLib.AssemblyObject
  langs:
  - csharp
  - vb
  name: AssemblyObject(Mesh, Handle[], Plane, Vector3d, String, Int32, Double, Boolean, List<AssemblyObject>)
  nameWithType: AssemblyObject.AssemblyObject(Mesh, Handle[], Plane, Vector3d, String, Int32, Double, Boolean, List<AssemblyObject>)
  fullName: AssemblerLib.AssemblyObject.AssemblyObject(Rhino.Geometry.Mesh, AssemblerLib.Handle[], Rhino.Geometry.Plane, Rhino.Geometry.Vector3d, System.String, System.Int32, System.Double, System.Boolean, System.Collections.Generic.List<AssemblerLib.AssemblyObject>)
  type: Constructor
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/AssemblyObject.cs
    id: .ctor
    path: AssemblyObject.cs
    startLine: 252
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  summary: "\nBuilds a composite AssemblyObject from a list of children, a custom collisionMesh, and a custom set of Handles\n"
  example: []
  syntax:
    content: public AssemblyObject(Mesh collisionMesh, Handle[] handles, Plane referencePlane, Vector3d direction, string name, int type, double weight, bool absoluteZLock, List<AssemblyObject> children)
    parameters:
    - id: collisionMesh
      type: Rhino.Geometry.Mesh
      description: ''
    - id: handles
      type: AssemblerLib.Handle[]
      description: ''
    - id: referencePlane
      type: Rhino.Geometry.Plane
      description: ''
    - id: direction
      type: Rhino.Geometry.Vector3d
      description: ''
    - id: name
      type: System.String
      description: ''
    - id: type
      type: System.Int32
      description: ''
    - id: weight
      type: System.Double
      description: ''
    - id: absoluteZLock
      type: System.Boolean
      description: ''
    - id: children
      type: System.Collections.Generic.List{AssemblerLib.AssemblyObject}
      description: ''
    content.vb: Public Sub New(collisionMesh As Mesh, handles As Handle(), referencePlane As Plane, direction As Vector3d, name As String, type As Integer, weight As Double, absoluteZLock As Boolean, children As List(Of AssemblyObject))
  overload: AssemblerLib.AssemblyObject.#ctor*
  nameWithType.vb: AssemblyObject.AssemblyObject(Mesh, Handle(), Plane, Vector3d, String, Int32, Double, Boolean, List(Of AssemblyObject))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AssemblerLib.AssemblyObject.AssemblyObject(Rhino.Geometry.Mesh, AssemblerLib.Handle(), Rhino.Geometry.Plane, Rhino.Geometry.Vector3d, System.String, System.Int32, System.Double, System.Boolean, System.Collections.Generic.List(Of AssemblerLib.AssemblyObject))
  name.vb: AssemblyObject(Mesh, Handle(), Plane, Vector3d, String, Int32, Double, Boolean, List(Of AssemblyObject))
- uid: AssemblerLib.AssemblyObject.Transform(Rhino.Geometry.Transform)
  commentId: M:AssemblerLib.AssemblyObject.Transform(Rhino.Geometry.Transform)
  id: Transform(Rhino.Geometry.Transform)
  parent: AssemblerLib.AssemblyObject
  langs:
  - csharp
  - vb
  name: Transform(Transform)
  nameWithType: AssemblyObject.Transform(Transform)
  fullName: AssemblerLib.AssemblyObject.Transform(Rhino.Geometry.Transform)
  type: Method
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/AssemblyObject.cs
    id: Transform
    path: AssemblyObject.cs
    startLine: 285
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  summary: "\nTransform AssemblyObject using a generic Transformation\n"
  example: []
  syntax:
    content: public void Transform(Transform xForm)
    parameters:
    - id: xForm
      type: Rhino.Geometry.Transform
      description: The Transformation to apply
    content.vb: Public Sub Transform(xForm As Transform)
  overload: AssemblerLib.AssemblyObject.Transform*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AssemblerLib.AssemblyObject.UpdateHandle(System.Int32,System.Int32,System.Int32,System.Int32,System.Double)
  commentId: M:AssemblerLib.AssemblyObject.UpdateHandle(System.Int32,System.Int32,System.Int32,System.Int32,System.Double)
  id: UpdateHandle(System.Int32,System.Int32,System.Int32,System.Int32,System.Double)
  parent: AssemblerLib.AssemblyObject
  langs:
  - csharp
  - vb
  name: UpdateHandle(Int32, Int32, Int32, Int32, Double)
  nameWithType: AssemblyObject.UpdateHandle(Int32, Int32, Int32, Int32, Double)
  fullName: AssemblerLib.AssemblyObject.UpdateHandle(System.Int32, System.Int32, System.Int32, System.Int32, System.Double)
  type: Method
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/AssemblyObject.cs
    id: UpdateHandle
    path: AssemblyObject.cs
    startLine: 308
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  syntax:
    content: public void UpdateHandle(int handleIndex, int occupancy, int neighbourObject, int neighbourHandle, double weight)
    parameters:
    - id: handleIndex
      type: System.Int32
    - id: occupancy
      type: System.Int32
    - id: neighbourObject
      type: System.Int32
    - id: neighbourHandle
      type: System.Int32
    - id: weight
      type: System.Double
    content.vb: Public Sub UpdateHandle(handleIndex As Integer, occupancy As Integer, neighbourObject As Integer, neighbourHandle As Integer, weight As Double)
  overload: AssemblerLib.AssemblyObject.UpdateHandle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AssemblerLib
  commentId: N:AssemblerLib
  name: AssemblerLib
  nameWithType: AssemblerLib
  fullName: AssemblerLib
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{AssemblerLib.AssemblyObject}
  commentId: T:System.Collections.Generic.List{AssemblerLib.AssemblyObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<AssemblyObject>
  nameWithType: List<AssemblyObject>
  fullName: System.Collections.Generic.List<AssemblerLib.AssemblyObject>
  nameWithType.vb: List(Of AssemblyObject)
  fullName.vb: System.Collections.Generic.List(Of AssemblerLib.AssemblyObject)
  name.vb: List(Of AssemblyObject)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AssemblerLib.AssemblyObject
    name: AssemblyObject
    nameWithType: AssemblyObject
    fullName: AssemblerLib.AssemblyObject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AssemblerLib.AssemblyObject
    name: AssemblyObject
    nameWithType: AssemblyObject
    fullName: AssemblerLib.AssemblyObject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Rhino.Geometry.Mesh
  commentId: T:Rhino.Geometry.Mesh
  parent: Rhino.Geometry
  isExternal: true
  name: Mesh
  nameWithType: Mesh
  fullName: Rhino.Geometry.Mesh
- uid: Rhino.Geometry
  commentId: N:Rhino.Geometry
  isExternal: true
  name: Rhino.Geometry
  nameWithType: Rhino.Geometry
  fullName: Rhino.Geometry
- uid: Rhino.Geometry.Plane
  commentId: T:Rhino.Geometry.Plane
  parent: Rhino.Geometry
  isExternal: true
  name: Plane
  nameWithType: Plane
  fullName: Rhino.Geometry.Plane
- uid: AssemblerLib.Handle[]
  isExternal: true
  name: Handle[]
  nameWithType: Handle[]
  fullName: AssemblerLib.Handle[]
  nameWithType.vb: Handle()
  fullName.vb: AssemblerLib.Handle()
  name.vb: Handle()
  spec.csharp:
  - uid: AssemblerLib.Handle
    name: Handle
    nameWithType: Handle
    fullName: AssemblerLib.Handle
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: AssemblerLib.Handle
    name: Handle
    nameWithType: Handle
    fullName: AssemblerLib.Handle
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Rhino.Geometry.Vector3d
  commentId: T:Rhino.Geometry.Vector3d
  parent: Rhino.Geometry
  isExternal: true
  name: Vector3d
  nameWithType: Vector3d
  fullName: Rhino.Geometry.Vector3d
- uid: System.Collections.Generic.List{AssemblerLib.Support}
  commentId: T:System.Collections.Generic.List{AssemblerLib.Support}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Support>
  nameWithType: List<Support>
  fullName: System.Collections.Generic.List<AssemblerLib.Support>
  nameWithType.vb: List(Of Support)
  fullName.vb: System.Collections.Generic.List(Of AssemblerLib.Support)
  name.vb: List(Of Support)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AssemblerLib.Support
    name: Support
    nameWithType: Support
    fullName: AssemblerLib.Support
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AssemblerLib.Support
    name: Support
    nameWithType: Support
    fullName: AssemblerLib.Support
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AssemblerLib.AssemblyObject.AInd*
  commentId: Overload:AssemblerLib.AssemblyObject.AInd
  name: AInd
  nameWithType: AssemblyObject.AInd
  fullName: AssemblerLib.AssemblyObject.AInd
- uid: System.Collections.Generic.List{System.Int32[]}
  commentId: T:System.Collections.Generic.List{System.Int32[]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Int32[]>
  nameWithType: List<Int32[]>
  fullName: System.Collections.Generic.List<System.Int32[]>
  nameWithType.vb: List(Of Int32())
  fullName.vb: System.Collections.Generic.List(Of System.Int32())
  name.vb: List(Of Int32())
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: AssemblerLib.AssemblyObject.#ctor*
  commentId: Overload:AssemblerLib.AssemblyObject.#ctor
  name: AssemblyObject
  nameWithType: AssemblyObject.AssemblyObject
  fullName: AssemblerLib.AssemblyObject.AssemblyObject
- uid: AssemblerLib.AssemblyObject.Transform*
  commentId: Overload:AssemblerLib.AssemblyObject.Transform
  name: Transform
  nameWithType: AssemblyObject.Transform
  fullName: AssemblerLib.AssemblyObject.Transform
- uid: Rhino.Geometry.Transform
  commentId: T:Rhino.Geometry.Transform
  parent: Rhino.Geometry
  isExternal: true
  name: Transform
  nameWithType: Transform
  fullName: Rhino.Geometry.Transform
- uid: AssemblerLib.AssemblyObject.UpdateHandle*
  commentId: Overload:AssemblerLib.AssemblyObject.UpdateHandle
  name: UpdateHandle
  nameWithType: AssemblyObject.UpdateHandle
  fullName: AssemblerLib.AssemblyObject.UpdateHandle
