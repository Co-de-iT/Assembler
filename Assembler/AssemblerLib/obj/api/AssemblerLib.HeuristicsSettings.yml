### YamlMime:ManagedReference
items:
- uid: AssemblerLib.HeuristicsSettings
  commentId: T:AssemblerLib.HeuristicsSettings
  id: HeuristicsSettings
  parent: AssemblerLib
  children:
  - AssemblerLib.HeuristicsSettings.#ctor(System.Collections.Generic.List{System.String},System.Int32,System.Int32,System.Int32,System.Int32)
  - AssemblerLib.HeuristicsSettings.currentHeuristics
  - AssemblerLib.HeuristicsSettings.heuristicsMode
  - AssemblerLib.HeuristicsSettings.heuristicsString
  - AssemblerLib.HeuristicsSettings.receiverSelectionMode
  - AssemblerLib.HeuristicsSettings.ruleSelectionMode
  langs:
  - csharp
  - vb
  name: HeuristicsSettings
  nameWithType: HeuristicsSettings
  fullName: AssemblerLib.HeuristicsSettings
  type: Struct
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/HeuristicsSettings.cs
    id: HeuristicsSettings
    path: HeuristicsSettings.cs
    startLine: 6
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  syntax:
    content: public struct HeuristicsSettings
    content.vb: Public Structure HeuristicsSettings
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: AssemblerLib.HeuristicsSettings.heuristicsString
  commentId: F:AssemblerLib.HeuristicsSettings.heuristicsString
  id: heuristicsString
  parent: AssemblerLib.HeuristicsSettings
  langs:
  - csharp
  - vb
  name: heuristicsString
  nameWithType: HeuristicsSettings.heuristicsString
  fullName: AssemblerLib.HeuristicsSettings.heuristicsString
  type: Field
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/HeuristicsSettings.cs
    id: heuristicsString
    path: HeuristicsSettings.cs
    startLine: 8
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  syntax:
    content: public List<string> heuristicsString
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public heuristicsString As List(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AssemblerLib.HeuristicsSettings.currentHeuristics
  commentId: F:AssemblerLib.HeuristicsSettings.currentHeuristics
  id: currentHeuristics
  parent: AssemblerLib.HeuristicsSettings
  langs:
  - csharp
  - vb
  name: currentHeuristics
  nameWithType: HeuristicsSettings.currentHeuristics
  fullName: AssemblerLib.HeuristicsSettings.currentHeuristics
  type: Field
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/HeuristicsSettings.cs
    id: currentHeuristics
    path: HeuristicsSettings.cs
    startLine: 9
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  syntax:
    content: public int currentHeuristics
    return:
      type: System.Int32
    content.vb: Public currentHeuristics As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AssemblerLib.HeuristicsSettings.heuristicsMode
  commentId: F:AssemblerLib.HeuristicsSettings.heuristicsMode
  id: heuristicsMode
  parent: AssemblerLib.HeuristicsSettings
  langs:
  - csharp
  - vb
  name: heuristicsMode
  nameWithType: HeuristicsSettings.heuristicsMode
  fullName: AssemblerLib.HeuristicsSettings.heuristicsMode
  type: Field
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/HeuristicsSettings.cs
    id: heuristicsMode
    path: HeuristicsSettings.cs
    startLine: 10
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  syntax:
    content: public int heuristicsMode
    return:
      type: System.Int32
    content.vb: Public heuristicsMode As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AssemblerLib.HeuristicsSettings.receiverSelectionMode
  commentId: F:AssemblerLib.HeuristicsSettings.receiverSelectionMode
  id: receiverSelectionMode
  parent: AssemblerLib.HeuristicsSettings
  langs:
  - csharp
  - vb
  name: receiverSelectionMode
  nameWithType: HeuristicsSettings.receiverSelectionMode
  fullName: AssemblerLib.HeuristicsSettings.receiverSelectionMode
  type: Field
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/HeuristicsSettings.cs
    id: receiverSelectionMode
    path: HeuristicsSettings.cs
    startLine: 11
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  syntax:
    content: public int receiverSelectionMode
    return:
      type: System.Int32
    content.vb: Public receiverSelectionMode As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AssemblerLib.HeuristicsSettings.ruleSelectionMode
  commentId: F:AssemblerLib.HeuristicsSettings.ruleSelectionMode
  id: ruleSelectionMode
  parent: AssemblerLib.HeuristicsSettings
  langs:
  - csharp
  - vb
  name: ruleSelectionMode
  nameWithType: HeuristicsSettings.ruleSelectionMode
  fullName: AssemblerLib.HeuristicsSettings.ruleSelectionMode
  type: Field
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/HeuristicsSettings.cs
    id: ruleSelectionMode
    path: HeuristicsSettings.cs
    startLine: 12
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  syntax:
    content: public int ruleSelectionMode
    return:
      type: System.Int32
    content.vb: Public ruleSelectionMode As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AssemblerLib.HeuristicsSettings.#ctor(System.Collections.Generic.List{System.String},System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:AssemblerLib.HeuristicsSettings.#ctor(System.Collections.Generic.List{System.String},System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Collections.Generic.List{System.String},System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: AssemblerLib.HeuristicsSettings
  langs:
  - csharp
  - vb
  name: HeuristicsSettings(List<String>, Int32, Int32, Int32, Int32)
  nameWithType: HeuristicsSettings.HeuristicsSettings(List<String>, Int32, Int32, Int32, Int32)
  fullName: AssemblerLib.HeuristicsSettings.HeuristicsSettings(System.Collections.Generic.List<System.String>, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/HeuristicsSettings.cs
    id: .ctor
    path: HeuristicsSettings.cs
    startLine: 14
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  syntax:
    content: public HeuristicsSettings(List<string> heuristicsString, int currentHeuristics, int heuristicsMode, int receiverSelectionMode, int ruleSelectionMode)
    parameters:
    - id: heuristicsString
      type: System.Collections.Generic.List{System.String}
    - id: currentHeuristics
      type: System.Int32
    - id: heuristicsMode
      type: System.Int32
    - id: receiverSelectionMode
      type: System.Int32
    - id: ruleSelectionMode
      type: System.Int32
    content.vb: Public Sub New(heuristicsString As List(Of String), currentHeuristics As Integer, heuristicsMode As Integer, receiverSelectionMode As Integer, ruleSelectionMode As Integer)
  overload: AssemblerLib.HeuristicsSettings.#ctor*
  nameWithType.vb: HeuristicsSettings.HeuristicsSettings(List(Of String), Int32, Int32, Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: AssemblerLib.HeuristicsSettings.HeuristicsSettings(System.Collections.Generic.List(Of System.String), System.Int32, System.Int32, System.Int32, System.Int32)
  name.vb: HeuristicsSettings(List(Of String), Int32, Int32, Int32, Int32)
references:
- uid: AssemblerLib
  commentId: N:AssemblerLib
  name: AssemblerLib
  nameWithType: AssemblerLib
  fullName: AssemblerLib
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: AssemblerLib.HeuristicsSettings.#ctor*
  commentId: Overload:AssemblerLib.HeuristicsSettings.#ctor
  name: HeuristicsSettings
  nameWithType: HeuristicsSettings.HeuristicsSettings
  fullName: AssemblerLib.HeuristicsSettings.HeuristicsSettings
