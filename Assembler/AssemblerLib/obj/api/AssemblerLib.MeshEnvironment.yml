### YamlMime:ManagedReference
items:
- uid: AssemblerLib.MeshEnvironment
  commentId: T:AssemblerLib.MeshEnvironment
  id: MeshEnvironment
  parent: AssemblerLib
  children:
  - AssemblerLib.MeshEnvironment.#ctor(AssemblerLib.MeshEnvironment)
  - AssemblerLib.MeshEnvironment.#ctor(Rhino.Geometry.Mesh)
  - AssemblerLib.MeshEnvironment.#ctor(Rhino.Geometry.Mesh,System.Int32)
  - AssemblerLib.MeshEnvironment.CollisionCheck(Rhino.Geometry.Mesh)
  - AssemblerLib.MeshEnvironment.IsPointInvalid(Rhino.Geometry.Point3d)
  - AssemblerLib.MeshEnvironment.mesh
  - AssemblerLib.MeshEnvironment.type
  langs:
  - csharp
  - vb
  name: MeshEnvironment
  nameWithType: MeshEnvironment
  fullName: AssemblerLib.MeshEnvironment
  type: Class
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/MeshEnvironment.cs
    id: MeshEnvironment
    path: MeshEnvironment.cs
    startLine: 10
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  summary: "\nthis class can give more properties to the environment objects\n"
  example: []
  syntax:
    content: public class MeshEnvironment
    content.vb: Public Class MeshEnvironment
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AssemblerLib.MeshEnvironment.mesh
  commentId: F:AssemblerLib.MeshEnvironment.mesh
  id: mesh
  parent: AssemblerLib.MeshEnvironment
  langs:
  - csharp
  - vb
  name: mesh
  nameWithType: MeshEnvironment.mesh
  fullName: AssemblerLib.MeshEnvironment.mesh
  type: Field
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/MeshEnvironment.cs
    id: mesh
    path: MeshEnvironment.cs
    startLine: 15
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  summary: "\nMesh\n"
  example: []
  syntax:
    content: public Mesh mesh
    return:
      type: Rhino.Geometry.Mesh
    content.vb: Public mesh As Mesh
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AssemblerLib.MeshEnvironment.type
  commentId: F:AssemblerLib.MeshEnvironment.type
  id: type
  parent: AssemblerLib.MeshEnvironment
  langs:
  - csharp
  - vb
  name: type
  nameWithType: MeshEnvironment.type
  fullName: AssemblerLib.MeshEnvironment.type
  type: Field
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/MeshEnvironment.cs
    id: type
    path: MeshEnvironment.cs
    startLine: 18
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  syntax:
    content: public MeshEnvironment.Type type
    return:
      type: AssemblerLib.MeshEnvironment.Type
    content.vb: Public type As MeshEnvironment.Type
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AssemblerLib.MeshEnvironment.#ctor(Rhino.Geometry.Mesh)
  commentId: M:AssemblerLib.MeshEnvironment.#ctor(Rhino.Geometry.Mesh)
  id: '#ctor(Rhino.Geometry.Mesh)'
  parent: AssemblerLib.MeshEnvironment
  langs:
  - csharp
  - vb
  name: MeshEnvironment(Mesh)
  nameWithType: MeshEnvironment.MeshEnvironment(Mesh)
  fullName: AssemblerLib.MeshEnvironment.MeshEnvironment(Rhino.Geometry.Mesh)
  type: Constructor
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/MeshEnvironment.cs
    id: .ctor
    path: MeshEnvironment.cs
    startLine: 24
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  summary: "\nConstructs a MeshEnvironment from a Mesh\n"
  example: []
  syntax:
    content: public MeshEnvironment(Mesh mesh)
    parameters:
    - id: mesh
      type: Rhino.Geometry.Mesh
      description: ''
    content.vb: Public Sub New(mesh As Mesh)
  overload: AssemblerLib.MeshEnvironment.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AssemblerLib.MeshEnvironment.#ctor(Rhino.Geometry.Mesh,System.Int32)
  commentId: M:AssemblerLib.MeshEnvironment.#ctor(Rhino.Geometry.Mesh,System.Int32)
  id: '#ctor(Rhino.Geometry.Mesh,System.Int32)'
  parent: AssemblerLib.MeshEnvironment
  langs:
  - csharp
  - vb
  name: MeshEnvironment(Mesh, Int32)
  nameWithType: MeshEnvironment.MeshEnvironment(Mesh, Int32)
  fullName: AssemblerLib.MeshEnvironment.MeshEnvironment(Rhino.Geometry.Mesh, System.Int32)
  type: Constructor
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/MeshEnvironment.cs
    id: .ctor
    path: MeshEnvironment.cs
    startLine: 36
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  summary: "\nConstructs a MeshEnvironment from a Mesh and an explicit type\n"
  example: []
  syntax:
    content: public MeshEnvironment(Mesh mesh, int type)
    parameters:
    - id: mesh
      type: Rhino.Geometry.Mesh
      description: ''
    - id: type
      type: System.Int32
      description: ''
    content.vb: Public Sub New(mesh As Mesh, type As Integer)
  overload: AssemblerLib.MeshEnvironment.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AssemblerLib.MeshEnvironment.#ctor(AssemblerLib.MeshEnvironment)
  commentId: M:AssemblerLib.MeshEnvironment.#ctor(AssemblerLib.MeshEnvironment)
  id: '#ctor(AssemblerLib.MeshEnvironment)'
  parent: AssemblerLib.MeshEnvironment
  langs:
  - csharp
  - vb
  name: MeshEnvironment(MeshEnvironment)
  nameWithType: MeshEnvironment.MeshEnvironment(MeshEnvironment)
  fullName: AssemblerLib.MeshEnvironment.MeshEnvironment(AssemblerLib.MeshEnvironment)
  type: Constructor
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/MeshEnvironment.cs
    id: .ctor
    path: MeshEnvironment.cs
    startLine: 41
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  syntax:
    content: public MeshEnvironment(MeshEnvironment other)
    parameters:
    - id: other
      type: AssemblerLib.MeshEnvironment
    content.vb: Public Sub New(other As MeshEnvironment)
  overload: AssemblerLib.MeshEnvironment.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AssemblerLib.MeshEnvironment.IsPointInvalid(Rhino.Geometry.Point3d)
  commentId: M:AssemblerLib.MeshEnvironment.IsPointInvalid(Rhino.Geometry.Point3d)
  id: IsPointInvalid(Rhino.Geometry.Point3d)
  parent: AssemblerLib.MeshEnvironment
  langs:
  - csharp
  - vb
  name: IsPointInvalid(Point3d)
  nameWithType: MeshEnvironment.IsPointInvalid(Point3d)
  fullName: AssemblerLib.MeshEnvironment.IsPointInvalid(Rhino.Geometry.Point3d)
  type: Method
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/MeshEnvironment.cs
    id: IsPointInvalid
    path: MeshEnvironment.cs
    startLine: 53
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  summary: "\nCheck if point P is inside an obstacle or outside a container\n"
  example: []
  syntax:
    content: public bool IsPointInvalid(Point3d P)
    parameters:
    - id: P
      type: Rhino.Geometry.Point3d
      description: ''
    return:
      type: System.Boolean
      description: True if a point is invalid (inside an obstacle or outside a container)
    content.vb: Public Function IsPointInvalid(P As Point3d) As Boolean
  overload: AssemblerLib.MeshEnvironment.IsPointInvalid*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AssemblerLib.MeshEnvironment.CollisionCheck(Rhino.Geometry.Mesh)
  commentId: M:AssemblerLib.MeshEnvironment.CollisionCheck(Rhino.Geometry.Mesh)
  id: CollisionCheck(Rhino.Geometry.Mesh)
  parent: AssemblerLib.MeshEnvironment
  langs:
  - csharp
  - vb
  name: CollisionCheck(Mesh)
  nameWithType: MeshEnvironment.CollisionCheck(Mesh)
  fullName: AssemblerLib.MeshEnvironment.CollisionCheck(Rhino.Geometry.Mesh)
  type: Method
  source:
    remote:
      path: C:/Users/aless/Documents/@ code/GH code/@ Assembler/Assembler/AssemblerLib/MeshEnvironment.cs
    id: CollisionCheck
    path: MeshEnvironment.cs
    startLine: 107
  assemblies:
  - AssemblerLib
  namespace: AssemblerLib
  summary: "\nChecks for collision with a given Mesh\n"
  example: []
  syntax:
    content: public bool CollisionCheck(Mesh m)
    parameters:
    - id: m
      type: Rhino.Geometry.Mesh
      description: ''
    return:
      type: System.Boolean
      description: true if collision happens
    content.vb: Public Function CollisionCheck(m As Mesh) As Boolean
  overload: AssemblerLib.MeshEnvironment.CollisionCheck*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: AssemblerLib
  commentId: N:AssemblerLib
  name: AssemblerLib
  nameWithType: AssemblerLib
  fullName: AssemblerLib
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Rhino.Geometry.Mesh
  commentId: T:Rhino.Geometry.Mesh
  parent: Rhino.Geometry
  isExternal: true
  name: Mesh
  nameWithType: Mesh
  fullName: Rhino.Geometry.Mesh
- uid: Rhino.Geometry
  commentId: N:Rhino.Geometry
  isExternal: true
  name: Rhino.Geometry
  nameWithType: Rhino.Geometry
  fullName: Rhino.Geometry
- uid: AssemblerLib.MeshEnvironment.Type
  commentId: T:AssemblerLib.MeshEnvironment.Type
  parent: AssemblerLib
  name: MeshEnvironment.Type
  nameWithType: MeshEnvironment.Type
  fullName: AssemblerLib.MeshEnvironment.Type
- uid: AssemblerLib.MeshEnvironment.#ctor*
  commentId: Overload:AssemblerLib.MeshEnvironment.#ctor
  name: MeshEnvironment
  nameWithType: MeshEnvironment.MeshEnvironment
  fullName: AssemblerLib.MeshEnvironment.MeshEnvironment
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: AssemblerLib.MeshEnvironment
  commentId: T:AssemblerLib.MeshEnvironment
  parent: AssemblerLib
  name: MeshEnvironment
  nameWithType: MeshEnvironment
  fullName: AssemblerLib.MeshEnvironment
- uid: AssemblerLib.MeshEnvironment.IsPointInvalid*
  commentId: Overload:AssemblerLib.MeshEnvironment.IsPointInvalid
  name: IsPointInvalid
  nameWithType: MeshEnvironment.IsPointInvalid
  fullName: AssemblerLib.MeshEnvironment.IsPointInvalid
- uid: Rhino.Geometry.Point3d
  commentId: T:Rhino.Geometry.Point3d
  parent: Rhino.Geometry
  isExternal: true
  name: Point3d
  nameWithType: Point3d
  fullName: Rhino.Geometry.Point3d
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: AssemblerLib.MeshEnvironment.CollisionCheck*
  commentId: Overload:AssemblerLib.MeshEnvironment.CollisionCheck
  name: CollisionCheck
  nameWithType: MeshEnvironment.CollisionCheck
  fullName: AssemblerLib.MeshEnvironment.CollisionCheck
